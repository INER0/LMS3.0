# Generated by Django 5.2.5 on 2025-08-08 15:21

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('circulation', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyRevenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_count', models.IntegerField()),
            ],
            options={
                'db_table': 'daily_revenue',
                'ordering': ['-date'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonthlyRevenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('membership_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('fine_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('service_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('reservation_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
            ],
            options={
                'db_table': 'monthly_revenue',
                'ordering': ['-month'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('calculation_date', models.DateField(auto_now_add=True)),
                ('period', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'payment_analytics',
                'ordering': ['-calculation_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('membership', 'Membership'), ('fine', 'Fine'), ('reservation', 'Reservation'), ('digital', 'Digital Service')], max_length=20)),
                ('related_id', models.IntegerField(blank=True, help_text='ID of related record (polymorphic)', null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('online', 'Online Banking'), ('mobile', 'Mobile Payment')], default='cash', max_length=20)),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='MembershipPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_type', models.CharField(max_length=20)),
                ('period', models.CharField(choices=[('monthly', 'Monthly'), ('annual', 'Annual')], max_length=20)),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('auto_renew', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
            ],
            options={
                'db_table': 'membership_payments',
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='FinePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partial_payment', models.BooleanField(default=False)),
                ('fine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circulation.fine')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
            ],
            options={
                'db_table': 'fine_payments',
                'ordering': ['-payment__payment_date'],
            },
        ),
        migrations.CreateModel(
            name='DigitalServicePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circulation.digitalservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
            ],
            options={
                'db_table': 'digital_service_payments',
                'ordering': ['-payment__payment_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_change', models.CharField(max_length=50)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
            ],
            options={
                'verbose_name_plural': 'Payment History',
                'db_table': 'payment_history',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily', 'Daily Revenue'), ('monthly', 'Monthly Revenue'), ('yearly', 'Yearly Revenue'), ('fines_collected', 'Fines Collected'), ('membership_revenue', 'Membership Revenue'), ('service_revenue', 'Digital Services Revenue')], max_length=30)),
                ('report_date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('transaction_count', models.IntegerField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment_reports',
                'ordering': ['-report_date'],
                'unique_together': {('report_type', 'report_date')},
            },
        ),
    ]
